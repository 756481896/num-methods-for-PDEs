.. !split

Exercises  (1)
==============

.. --- begin exercise ---

.. _decay:exer:dudt:

Exercise 1: Differentiate a function
------------------------------------

Given a discrete mesh function :math:`u^n` as an arrays ``u`` with
:math:`u^n` values at mesh points :math:`t_n=n\Delta t`, write a function
``differentiate(u, dt)`` that returns the discrete derivative :math:`d^n` of the
mesh function :math:`u^n`. The parameter ``dt`` reflects the
mesh spacing :math:`\Delta t`.
The discrete derivative can be based on
centered differences:

.. math::
         d^n = \frac{u^{n+1}-u^{n-1}}{2\Delta t},\quad n=1,\ldots,N_t-1{\thinspace .}

At the end points we use forward and backward differences:

.. math::
         d^0 = \frac{u^{1}-u^{0}}{\Delta t},

and

.. math::
         d^{N_t} = \frac{u^{N_t}-u^{N_t-1}}{\Delta t}{\thinspace .}

.. --- begin hint in exercise ---

**Hint.**
The three differentiation formulas are
exact for quadratic polynomials. Use this property to verify the program.

.. --- end hint in exercise ---

Filename: ``differentiate.py``.

.. --- end exercise ---

.. --- begin exercise ---

.. _decay:exer:intdiv:

Exercise 2: Experiment with integer division
--------------------------------------------

Explain what happens in the following computations, where
some are mathematically unexpected:

.. code-block:: ipy

        >>> dt = 3
        >>> T = 8
        >>> Nt = T/dt
        >>> Nt
        2
        >>> theta = 1; a = 1
        >>> (1 - (1-theta)*a*dt)/(1 + theta*dt*a)
        0

Filename: ``pyproblems.txt``.

.. --- end exercise ---

.. --- begin exercise ---

.. _decay:exer:decay1err:

Exercise 3: Experiment with wrong computations
----------------------------------------------

Consider the ``solver`` function in the `decay_v1.py <http://tinyurl.com/nm5587k/decay/decay_v1.py>`__ file
and the following call:

.. code-block:: python

        u, t = solver(I=1, a=1, T=7, dt=2, theta=1)

The output becomes

.. code-block:: text

        t= 0.000 u=1
        t= 2.000 u=0
        t= 4.000 u=0
        t= 6.000 u=0

Print out the result of all intermediate computations and use
``type(v)`` to see the object type of the result stored in ``v``.
Examine the intermediate calculations and explain
why ``u`` is wrong and why we compute up to :math:`t=6` only even though we
specified :math:`T=7`.
Filename: ``decay_v1_err.py``.

.. --- end exercise ---

.. --- begin exercise ---

.. _decay:exer:plot:error:

Exercise 4: Plot the error function
-----------------------------------

Solve the problem :math:`u'=-au`, :math:`u(0)=I`, using the Forward Euler, Backward
Euler, and Crank-Nicolson schemes. For each scheme, plot the error function
:math:`e^n = {u_{\small\mbox{e}}}(t_n)-u^n` for :math:`\Delta t`, :math:`\frac{1}{4}\Delta t`, and
:math:`\frac{1}{8}\Delta t`, where :math:`{u_{\small\mbox{e}}}` is the exact solution of the ODE and
:math:`u^n` is the numerical solution at mesh point :math:`t_n`.
Filename: ``decay_plot_error.py``.

.. --- end exercise ---

.. --- begin exercise ---

.. _decay:exer:inexact:output:

Exercise 5: Change formatting of numbers and debug
--------------------------------------------------

The `decay_memsave.py <http://tinyurl.com/nm5587k/decay/decay_memsave.py>`__ program
writes the time values and solution values to a file which looks
like

.. code-block:: text

        0.0000000000000000E+00  1.0000000000000000E+00
        2.0000000000000001E-01  8.3333333333333337E-01
        4.0000000000000002E-01  6.9444444444444453E-01
        6.0000000000000009E-01  5.7870370370370383E-01
        8.0000000000000004E-01  4.8225308641975323E-01
        1.0000000000000000E+00  4.0187757201646102E-01
        1.2000000000000000E+00  3.3489797668038418E-01
        1.3999999999999999E+00  2.7908164723365347E-01

Modify the file output such that it looks like

.. code-block:: text

        0.000  1.00000
        0.200  0.83333
        0.400  0.69444
        0.600  0.57870
        0.800  0.48225
        1.000  0.40188
        1.200  0.33490
        1.400  0.27908

Run the modified program

.. code-block:: text

        Terminal> python decay_memsave_v2.py --T 10 --theta 1 \ 
                  --dt 0.2 --makeplot

The program just prints ``Bug in the implementation!`` and does not
show the plot. What went wrong?
Filename: ``decay_memsave_v2.py``.

.. --- end exercise ---

